1.需求分析：分析应用程序到底要做什么功能：如登陆功能等，和需要什么业务

2.原型设计：根据需求分析的结果规划应用程序的原型，可以理解为简单的草稿图

3.ui设计：将草稿图转换为设计稿，并提供相对应的产物（设计稿，静态页面）

4.技术选型：根据业务场景分别选择相对应的技术桟（数据库桟，前端技术桟，后端技术桟）
    数据库使用的是mysql，后端使用php，前端使用jquery bootstrap  plugin  NProgress



5.数据库的设计：根据需求和原型，把数据库表设计出来
    直接导入sql脚本，生成表



6.项目架构设计：俗称架构，具体制定项目的规范约束，创建基本的项目结构，编写基础的公共
              模块代码和组织代码。
         baixiu-dev                 网站根目录
          |     ├─admin              后台文件夹
          |     └─static             静态文件夹（如css，js等代码存放在这个文件夹）
          |         ├─assets         资源文件夹（css，js，和网站布局需要的图片等）
          |         └─uploads        上传文件夹
          |
          |_____前台脚本文件
6.0整合静态文件：把ui写好的静态页面复制到相应的文件夹里。
6.1整合之修改文件后缀名(.php)和需要的依赖的路径（这里使用的是网站根目录的绝对路径，html是不支持的而php支持）
    小技巧：选中 按alt+j 点击j进行选择多个相同的内容。
    批量修改文件后缀名：cd切换到文件所在目录
    然后执行命令：ren *.html *.php
    批量替换修改路劲和a连接的href的后缀名等：phpstorm里：ctrl+shift+r
6.2创建网站配置文件：在根目录里config.php//里面配置连接数据库需要的数据
                                        主机名，项目名称等
6.3抽离出公共部分：把公共部分放到一个php文件中，然后再include '公共部分文件名称.php';//输出里面的内容不管html的还是php的
6.4修改公共部分的不同的地方：方法一：是在引入公共部分的前面定义一个变量<?php $current_page='设定一个值'?>
                                 然后再公共部分的页面里判断这个值为什么而做出相应的改变<?php echo $current_page === 'index' ? 'class="active"' : ''?>
                          方法二：在公共部分的最上面 获取$_SERVER['PHP_SELF'];//返回当前页面的根目录路径
                                 然后判断路劲做出变化。


7.业务迭代开发：开发者的日常，基于项目架构下完成各项业务功能。
   一：控制页面的访问权限：在不登陆的情况下不能访问后台的其他页面
            思路：使用session实现，当登陆成功时往session里存入从数据库查出的对象
                 当用户请求别的页面时查看session中是否存在这个对象。存在则让其访问，不存在
                 则跳转到登陆页。
                 注意：在php中使用session需要下发session。
                 用法：在页面使用session之前session_start();
   二：完成功能：当用户输入邮箱完毕后，显示用户的头像，没有则显示默认的头像
                分析：因为输入邮箱属于页面加载完毕后进行的。所以输入完毕属于一个事件。需要用js的失去焦点事件
                     当失去焦点时，把输入框里的数据通过ajax发送到服务端查询该邮箱对应的头像图片地址。
                     得到地址，并把它赋值给需要显示头像的地方

8.集中测试：将所有的功能模块整合到一起，击中测试功能是否有bug，是否满足需求。

9.部署上线：从开发环境向生产环境转换，就是把项目部署到服务器上。
